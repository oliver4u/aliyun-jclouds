<?xml version="1.0" ?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.sonatype.oss</groupId>
    <artifactId>oss-parent</artifactId>
    <version>9</version>
  </parent>

  <groupId>io.github.aliyun-beta</groupId>
  <artifactId>aliyun-jclouds</artifactId>
  <version>1.0.0</version>
  <packaging>pom</packaging>
  <name>Jclouds for aliyun</name>
  <description>Parent for modules of aliyun-jclouds</description>
  <url>https://github.com/oliver4u/aliyun-jclouds</url>

  <organization>
    <name>Aliyun.com</name>
    <url>https://www.aliyun.com</url>
  </organization>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>suizhen</name>
      <email>suizhen@ucress.com</email>
    </developer>
    <developer>
      <name>Oliver Ou</name>
      <email>oliver.ou@sap.com</email>
      <organization>SAP</organization>
    </developer>
  </developers>

  <modules>
    <module>aliyun-oss</module>
    <!-- <module>aliyun-ecs</module> -->
    <!-- <module>aliyun-slb</module> -->
  </modules>

  <scm>
    <connection>scm:git:https://github.com/oliver4u/aliyun-jclouds.git</connection>
    <developerConnection>scm:git:https://github.com/oliver4u/aliyun-jclouds.git</developerConnection>
    <tag>HEAD</tag>
    <url>https://github.com/oliver4u/aliyun-jclouds</url>
  </scm>

  <issueManagement>
    <system>Github Issues</system>
    <url>https://github.com/oliver4u/aliyun-jclouds/issues</url>
  </issueManagement>

  <properties>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <java.version>1.8</java.version>

    <jclouds.version>2.2.0</jclouds.version>
    <auto-factory.version>1.0-beta7</auto-factory.version>
    <auto-service.version>1.0-rc6</auto-service.version>
    <auto-value.version>1.6.6</auto-value.version>

    <aliyun-java-sdk-core.version>2.4.2</aliyun-java-sdk-core.version>
    <!-- <aliyun-java-sdk-ecs.version>4.9.4</aliyun-java-sdk-ecs.version> -->
    <!-- <aliyun-java-sdk-slb.version>3.2.15</aliyun-java-sdk-slb.version> -->
    <aliyun-sdk-oss.version>3.3.0</aliyun-sdk-oss.version>

    <guava.version>27.0.1-jre</guava.version>
    <testng.version>6.8.8</testng.version>
    <encoding>utf-8</encoding>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.apache.jclouds</groupId>
        <artifactId>jclouds-core</artifactId>
        <version>${jclouds.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.jclouds.driver</groupId>
        <artifactId>jclouds-log4j</artifactId>
        <version>${jclouds.version}</version>
      </dependency>
      <!-- <dependency>
        <groupId>org.apache.jclouds</groupId>
        <artifactId>jclouds-compute</artifactId>
        <version>${jclouds.version}</version>
      </dependency> -->
      <dependency>
        <groupId>org.apache.jclouds</groupId>
        <artifactId>jclouds-blobstore</artifactId>
        <version>${jclouds.version}</version>
      </dependency>
      <!-- <dependency>
        <groupId>org.apache.jclouds</groupId>
        <artifactId>jclouds-loadbalancer</artifactId>
        <version>${jclouds.version}</version>
      </dependency> -->
      <dependency>
        <groupId>com.google.auto.factory</groupId>
        <artifactId>auto-factory</artifactId>
        <version>${auto-factory.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.auto.service</groupId>
        <artifactId>auto-service</artifactId>
        <version>${auto-service.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.auto.value</groupId>
        <artifactId>auto-value</artifactId>
        <version>${auto-value.version}</version>
      </dependency>
      <dependency>
        <groupId>com.aliyun</groupId>
        <artifactId>aliyun-java-sdk-core</artifactId>
        <version>${aliyun-java-sdk-core.version}</version>
      </dependency>
      <!-- <dependency>
        <groupId>com.aliyun</groupId>
        <artifactId>aliyun-java-sdk-ecs</artifactId>
        <version>${aliyun-java-sdk-ecs.version}</version>
      </dependency> -->
      <!-- <dependency>
        <groupId>com.aliyun</groupId>
        <artifactId>aliyun-java-sdk-slb</artifactId>
        <version>${aliyun-java-sdk-slb.version}</version>
      </dependency> -->
      <dependency>
        <groupId>com.aliyun.oss</groupId>
        <artifactId>aliyun-sdk-oss</artifactId>
        <version>${aliyun-sdk-oss.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>
      <dependency>
        <groupId>org.testng</groupId>
        <artifactId>testng</artifactId>
        <version>${testng.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.apache.jclouds</groupId>
      <artifactId>jclouds-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.jclouds.driver</groupId>
      <artifactId>jclouds-log4j</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.auto.factory</groupId>
      <artifactId>auto-factory</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.auto.service</groupId>
      <artifactId>auto-service</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.auto.value</groupId>
      <artifactId>auto-value</artifactId>
    </dependency>
    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>3.0.0</version>
          <dependencies>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>8.10</version>
            </dependency>
            <dependency>
              <groupId>com.github.ngeor</groupId>
              <artifactId>checkstyle-rules</artifactId>
              <version>1.1.0</version>
            </dependency>
          </dependencies>
          <configuration>
            <configLocation>com/github/ngeor/checkstyle.xml</configLocation>
            <includeTestSourceDirectory>true</includeTestSourceDirectory>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
      </plugin>

      <!--
            You can run jacoco in the default profile with:
            mvn jacoco:prepare-agent test jacoco:report
        -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.1</version>
      </plugin>
    </plugins>
  </build>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.0.0</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <configLocation>com/github/ngeor/checkstyle.xml</configLocation>
          <includeTestSourceDirectory>true</includeTestSourceDirectory>
        </configuration>
      </plugin>
    </plugins>
  </reporting>

  <profiles>
    <!--
    This profile enables jacoco when unit tests are run.
    You can run it with mvn -P jacoco test.
    It also activates itself on Travis.
    -->
    <profile>
      <id>jacoco</id>
      <activation>
        <property>
          <name>env.TRAVIS</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>prepare-agent</id>
                <phase>validate</phase>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>report</id>
                <phase>test</phase>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!--
    For the Travis profile:
    - we want to break the build on any checkstyle violation.
    - we want to be able to publish coverage report to coveralls.
    -->
    <profile>
      <id>travis</id>
      <activation>
        <property>
          <name>env.TRAVIS</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
            <executions>
              <execution>
                <id>checkstyle</id>
                <phase>test</phase>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.eluder.coveralls</groupId>
            <artifactId>coveralls-maven-plugin</artifactId>
            <version>4.3.0</version>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>